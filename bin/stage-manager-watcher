#!/usr/bin/env swift

// Based on dark-mode-notifier from
// https://github.com/mnewt/dotemacs

import Cocoa

let wmDefaults = UserDefaults.init(suiteName: "com.apple.WindowManager")!
let env = ProcessInfo.processInfo.environment
let home = env["HOME"] ?? ""

class Observer: NSObject {
  func checkStatus() {
    let isEnabled = wmDefaults.bool(forKey: "GloballyEnabled")
    print("Stage manager \(isEnabled ? "is" : "is not") enabled")
  }

  override func observeValue(
    forKeyPath keyPath: String?,
    of object: Any?,
    change: [NSKeyValueChangeKey: Any]?,
    context: UnsafeMutableRawPointer?
  ) {
    checkStatus()

    let manager = FileManager.default
    var filename = manager.homeDirectoryForCurrentUser
      .appendingPathComponent(".config")
      .appendingPathComponent("wezterm")
      .appendingPathComponent("wezterm.lua")

    var resourceValues = URLResourceValues()
    resourceValues.contentModificationDate = Date()
    try? filename.setResourceValues(resourceValues)
  }
}

let observer = Observer()

observer.checkStatus()

wmDefaults.addObserver(
  observer,
  forKeyPath: "GloballyEnabled",
  options: .new,
  context: nil
)

let sigintSrc = DispatchSource.makeSignalSource(signal: SIGINT, queue: .main)
sigintSrc.setEventHandler {
  Swift.print("")
  exit(0)
}
sigintSrc.resume()

NSApplication.shared.run()
